# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.1-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: ubuntu
          RAILS_ENV: test
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/postgres:11-alpine-postgis
        environment:
          POSTGRES_USER:     ubuntu
          POSTGRES_DB:       man-hour_development
          POSTGRES_PASSWORD: ""

    working_directory: ~/myapp

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      # seed
      #- run: bundle exec rails db:seed

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir ~/reports
          command: |
            bundle exec rails test TESTOPTS="--ci-dir=~/reports"
          when: always
      # collect reports
      - store_test_results:
          path: ~/reports
